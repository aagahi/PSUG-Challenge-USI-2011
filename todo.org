#+TITLE: Challenge USI

** Perf

 - 350ms par requÃªte

** Fonctionnel

 - don't forget the tests

*** DONE creation base de joueur
*** DONE core game management
*** DONE traitement du bonus dans le scoring du joueur
*** DONE persistence + replication avec BDB

*** DONE implementation login + generation cookie
    :PROPERTIES:
    :WHO:      abailly
    :END:
    - pb stockage acteur representant joueur
*** TODO separation des couches
    :PROPERTIES:
    :WHO:      abailly
    :END:
*** DONE cablage HTTP login
    :PROPERTIES:
    :WHO:      abailly
    :END:
*** TODO verification authentification lors des echanges
    :PROPERTIES:
    :WHO:      abailly
    :END:
    - comment s'assurer que le token est valide ?
    - il faudrait stocker une map de session côté serveur pour éviter que le client ne bricole un cookie...
*** TODO initialisation partie : cablage HTTP
    :PROPERTIES:
    :WHO:      aagahi
    :END:
*** TODO cablage HTTP du Game registering
    :PROPERTIES:
    :WHO:      aagahi
    :END:
*** TODO cablage HTTP des questions/reponses
    :PROPERTIES:
    :WHO:      aagahi
    :END:
*** TODO cablage HTTP ranking final
    - plus de score Ã  chaque question
    :PROPERTIES:
    :WHO:      abailly
    :END:
**** TODO mise a jour du scorer et du retour des n joueur avant/apres dans le classement
    - voir https://github.com/octo-technology/USI2011_BillionUserChallenge/issues/4#issue/4/comment/836207
    :PROPERTIES:
    :WHO:
    :END:
*** TODO tweet final
    :PROPERTIES:
    :WHO:      aagahi
    :END:
*** TODO persister historique des réponses d'un utilisateur
    :PROPERTIES:
    :WHO:      aagahi
    :END:
*** TODO resilience ? comment distribuer le scorer ?
    :PROPERTIES:
    :WHO:      abailly
    :END:
    - au moins 2 scorer en miroir pour etre rÃ©silient
    - chaque rÃ©sultat de rÃ©ponse est diffusÃ© sur au moins 2 noeuds
    - scorer fonctionne en tÃ¢che de fond
*** TODO fournir une reponse d'un joueur + question
    :PROPERTIES:
    :WHO:      abailly
    :END:
*** TODO cablage HTTP audit 
    :PROPERTIES:
    :WHO:      abailly
    :END:
*** TODO IHM HTML
    :PROPERTIES:
    :WHO:      gbadin
    :END:
*** TODO test perf du scorer
    :PROPERTIES:
    :WHO:      abailly
    :END:
    - utiliser tableau triÃ© des id de joueurs
**** TODO test de charge memoire pour 1M joueurs
**** TODO test de perf pour 1M joueurs/maj au fil de l'eau
**** TODO tester connexion/deconnexion d'un joueur relocalisÃ©
*** TODO test perf de netty
    :PROPERTIES:
    :WHO:      abailly
    :END:

** RÃ©partition

*** TODO add roles to agents when deploying jar
    - netty
    - replication BDB
    - game manager: 
      - register actor with underlying remoting engine
      - use config file for defining remoting
